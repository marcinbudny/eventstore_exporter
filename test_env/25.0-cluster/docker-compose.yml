x-eventstore-common: &eventstore-common
  image: docker.cloudsmith.io/eventstore/kurrent-latest/kurrentdb:25.0.0
  env_file:
    - common-variables.env
  volumes:
    - ./certs:/certs
  restart: unless-stopped
  depends_on:
    - setup

services:
  setup:
    image: eventstore/es-gencert-cli:1.0.2
    entrypoint: bash
    user: "1000:1000"
    command: >
      -c "mkdir -p ./certs && cd /certs
      && es-gencert-cli create-ca
      && es-gencert-cli create-node -out ./node1 -ip-addresses 127.0.0.1,172.16.1.11 -dns-names localhost
      && es-gencert-cli create-node -out ./node2 -ip-addresses 127.0.0.1,172.16.1.12 -dns-names localhost
      && es-gencert-cli create-node -out ./node3 -ip-addresses 127.0.0.1,172.16.1.13 -dns-names localhost
      && es-gencert-cli create-node -out ./node4 -ip-addresses 127.0.0.1,172.16.1.14 -dns-names localhost
      && es-gencert-cli create-node -out ./node5 -ip-addresses 127.0.0.1,172.16.1.15 -dns-names localhost
      && find . -type f -print0 | xargs -0 chmod 666"
    container_name: setup
    volumes:
      - ./certs:/certs

  eventstore1:
    <<: *eventstore-common
    environment:
      - KURRENTDB_GOSSIP_SEED=172.16.1.12:2123,172.16.1.13:2133,172.16.1.14:2143
      - KURRENTDB_REPLICATION_IP=172.16.1.11
      - KURRENTDB_NODE_PORT=2113
      - KURRENTDB_NODE_PRIORITY=100
      - KURRENTDB_CERTIFICATE_FILE=/certs/node1/node.crt
      - KURRENTDB_CERTIFICATE_PRIVATE_KEY_FILE=/certs/node1/node.key
    ports:
      - 2113:2113
    networks:
      clusternetwork:
        ipv4_address: 172.16.1.11

  eventstore2:
    <<: *eventstore-common
    environment:
      - KURRENTDB_GOSSIP_SEED=172.16.1.11:2113,172.16.1.13:2133,172.16.1.14:2143
      - KURRENTDB_REPLICATION_IP=172.16.1.12
      - KURRENTDB_NODE_PORT=2123
      - KURRENTDB_CERTIFICATE_FILE=/certs/node2/node.crt
      - KURRENTDB_CERTIFICATE_PRIVATE_KEY_FILE=/certs/node2/node.key
    ports:
      - 2123:2123
    networks:
      clusternetwork:
        ipv4_address: 172.16.1.12

  eventstore3:
    <<: *eventstore-common
    environment:
      - KURRENTDB_GOSSIP_SEED=172.16.1.11:2113,172.16.1.12:2123,172.16.1.14:2143
      - KURRENTDB_REPLICATION_IP=172.16.1.13
      - KURRENTDB_NODE_PORT=2133
      - KURRENTDB_CERTIFICATE_FILE=/certs/node3/node.crt
      - KURRENTDB_CERTIFICATE_PRIVATE_KEY_FILE=/certs/node3/node.key
    ports:
      - 2133:2133
    networks:
      clusternetwork:
        ipv4_address: 172.16.1.13

  eventstore4:
    <<: *eventstore-common
    environment:
      - KURRENTDB_GOSSIP_SEED=172.16.1.11:2113,172.16.1.12:2123,172.16.1.13:2133
      - KURRENTDB_REPLICATION_IP=172.16.1.14
      - KURRENTDB_NODE_PORT=2143
      - KURRENTDB_CERTIFICATE_FILE=/certs/node4/node.crt
      - KURRENTDB_CERTIFICATE_PRIVATE_KEY_FILE=/certs/node4/node.key
    ports:
      - 2143:2143
    networks:
      clusternetwork:
        ipv4_address: 172.16.1.14

  eventstore-ro-replica:
    <<: *eventstore-common
    environment:
      - KURRENTDB_GOSSIP_SEED=172.16.1.11:2113,172.16.1.12:2123,172.16.1.13:2133,172.16.1.14:2143
      - KURRENTDB_REPLICATION_IP=172.16.1.15
      - KURRENTDB_NODE_PORT=2153
      - KURRENTDB_READ_ONLY_REPLICA=True
      - KURRENTDB_CERTIFICATE_FILE=/certs/node5/node.crt
      - KURRENTDB_CERTIFICATE_PRIVATE_KEY_FILE=/certs/node5/node.key
    ports:
      - 2153:2153
    networks:
      clusternetwork:
        ipv4_address: 172.16.1.15

  prometheus:
    image: prom/prometheus:v2.39.1
    command:
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention=30d
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
      - --web.enable-admin-api
    volumes:
      - ../common/prometheus-config:/etc/prometheus/
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.1.7
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana-volume:/var/lib/grafana
      - ../common/grafana/provisioning/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ../common/grafana/provisioning/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ../common/grafana/dashboards:/var/lib/grafana-dashboards
    ports:
      - 3000:3000

networks:
  clusternetwork:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.1.0/24

volumes:
  grafana-volume: